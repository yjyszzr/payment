<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dl.shop.payment.dao.UserWithdrawLogMapper">
  <resultMap id="BaseResultMap" type="com.dl.shop.payment.model.UserWithdrawLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="withdraw_sn" jdbcType="VARCHAR" property="withdrawSn" />
    <result column="log_time" jdbcType="INTEGER" property="logTime" />
    <result column="log_code" jdbcType="BIT" property="logCode" />
    <result column="log_name" jdbcType="VARCHAR" property="logName" />
  </resultMap>
  
  <select id="findByWithdrawSn" resultMap="BaseResultMap">
  	select id, withdraw_sn, log_time, log_code, log_name
  	from dl_user_withdraw_log
  	where withdraw_sn = #{withdrawSn}
  	order by log_code
  </select>
  <insert id="batchInsertUserWithDrawLogsSuccess">
   <foreach collection="userWithdrawSns" separator=";" item="userWithDrawsn">
   	  INSERT INTO `dl_user_withdraw_log`(`withdraw_sn`, `log_time`, `log_code`, `log_name`) 
   	  select #{userWithDrawsn}, UNIX_TIMESTAMP(now()), 3, '提现成功'
   	  from DUAL where not exists 
      (select 1 from dl_user_withdraw_log where withdraw_sn=#{userWithDrawsn} and log_code=3)
   </foreach>
  </insert>
  <insert id="batchInsertUserWithDrawLogsFail">
   <foreach collection="userWithdrawSns" separator=";" item="userWithDrawsn">
   	 INSERT INTO `dl_user_withdraw_log`(`withdraw_sn`, `log_time`, `log_code`, `log_name`) 
   	 select #{userWithDrawsn}, UNIX_TIMESTAMP(now()), 4, '提现失败' 
   	 from DUAL where not exists 
     (select 1 from dl_user_withdraw_log where withdraw_sn=#{userWithDrawsn} and log_code=4)
   </foreach>
  </insert>
</mapper>